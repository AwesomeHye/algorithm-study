/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.hyein.algorithm;

import lombok.Data;

import java.util.Stack;

@Data
public class QueueUsingTwoStacks {
    private Stack stack1;
    private Stack stack2;

    private boolean isDequeueBefore;

    public QueueUsingTwoStacks(){
        stack1 = new Stack();
        stack2 = new Stack();
    }

    public <V> V enqueue(V value){

        //비어 있지 않은 스택에 한 줄로 쌀기
        if(stack1.empty() && stack2.empty()) {
            stack1.push(value);
        } else if(!stack1.empty()) {
            stack1.push(value);
        } else if(!stack2.empty()) {
            stack2.push(value);
        }

        return value;
    }

    public Object dequeue(){
        return stack1.empty()? removeValueByMigrationFromTo(stack2, stack1) : removeValueByMigrationFromTo(stack1, stack2);
    }

    private Object removeValueByMigrationFromTo(Stack fromStack, Stack toStack) {
        Object value = null;

        if(!fromStack.empty()) {
            //처음 값 남기고 모두 다른 스택으로 옮기기
            while (fromStack.size() > 1) {
                Object migratedValue = fromStack.pop();
                toStack.push(migratedValue);
            }

            //처음 값 제거
            value = fromStack.pop();

            //원위치
            for (int i = 0; toStack.size() > i; i++) {
                Object migratedValue = toStack.pop();
                fromStack.push(migratedValue);
            }
        }
        return value;
    }

    public int size(){
        return stack1.size() + stack2.size();
    }
}
